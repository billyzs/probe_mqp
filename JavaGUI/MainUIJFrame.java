/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package probe_mqp_java_gui;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author motmo
 */
public class MainUIJFrame extends javax.swing.JFrame {

    /**
     * Creates new form mainUIJFrame
     */
    public MainUIJFrame() {
        initComponents();
        customInitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        startCameraButton = new javax.swing.JButton();
        imageScrollPane = new javax.swing.JScrollPane();
        cameraLabel = new javax.swing.JLabel();
        captureImageButton = new javax.swing.JButton();
        captureVideoButton = new javax.swing.JButton();
        positionButton = new javax.swing.JButton();
        probeButton = new javax.swing.JButton();
        returnButton = new javax.swing.JButton();
        saveDataButton = new javax.swing.JButton();
        currentPositionLabel = new javax.swing.JLabel();
        currentPositionTextArea = new javax.swing.JTextArea();
        targetPositionLabel = new javax.swing.JLabel();
        targetPositionTextField = new javax.swing.JTextField();
        positionLabel = new javax.swing.JLabel();
        positionTextField = new javax.swing.JTextField();
        motorsEnableButton = new javax.swing.JButton();
        moveModeComboBox = new javax.swing.JComboBox<>();
        activeMotorComboBox = new javax.swing.JComboBox<>();
        jogPanel = new javax.swing.JPanel();
        jogYPosButton = new javax.swing.JButton();
        jogXNegButton = new javax.swing.JButton();
        jogXPosButton = new javax.swing.JButton();
        jogYNegButton = new javax.swing.JButton();
        moveModeLabel = new javax.swing.JLabel();
        activeMotorLabel = new javax.swing.JLabel();
        roiButton = new javax.swing.JButton();
        roiTypeComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(720, 720));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        startCameraButton.setLabel("Start");
        startCameraButton.setMaximumSize(new java.awt.Dimension(100, 50));
        startCameraButton.setPreferredSize(new java.awt.Dimension(100, 50));
        startCameraButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startCameraButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.33;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(startCameraButton, gridBagConstraints);

        imageScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        imageScrollPane.setToolTipText("");
        imageScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        imageScrollPane.setMaximumSize(new java.awt.Dimension(1280, 720));
        imageScrollPane.setMinimumSize(new java.awt.Dimension(640, 480));
        imageScrollPane.setPreferredSize(new java.awt.Dimension(1000, 1000));

        cameraLabel.setText("cameraLabel");
        cameraLabel.setMaximumSize(new java.awt.Dimension(1280, 1280));
        cameraLabel.setMinimumSize(new java.awt.Dimension(640, 480));
        cameraLabel.setName(""); // NOI18N
        cameraLabel.setPreferredSize(new java.awt.Dimension(1000, 1000));
        imageScrollPane.setViewportView(cameraLabel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 15;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        getContentPane().add(imageScrollPane, gridBagConstraints);

        captureImageButton.setLabel("Capture Image");
        captureImageButton.setMaximumSize(new java.awt.Dimension(100, 50));
        captureImageButton.setPreferredSize(new java.awt.Dimension(100, 50));
        captureImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                captureImageButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.33;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(captureImageButton, gridBagConstraints);

        captureVideoButton.setLabel("Capture Video");
        captureVideoButton.setMaximumSize(new java.awt.Dimension(100, 50));
        captureVideoButton.setPreferredSize(new java.awt.Dimension(100, 50));
        captureVideoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                captureVideoButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.33;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(captureVideoButton, gridBagConstraints);

        positionButton.setLabel("Position");
        positionButton.setMaximumSize(new java.awt.Dimension(100, 50));
        positionButton.setPreferredSize(new java.awt.Dimension(100, 50));
        positionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                positionButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        getContentPane().add(positionButton, gridBagConstraints);

        probeButton.setLabel("Probe");
        probeButton.setMaximumSize(new java.awt.Dimension(100, 50));
        probeButton.setPreferredSize(new java.awt.Dimension(100, 50));
        probeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                probeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        getContentPane().add(probeButton, gridBagConstraints);

        returnButton.setLabel("Return");
        returnButton.setMaximumSize(new java.awt.Dimension(100, 50));
        returnButton.setPreferredSize(new java.awt.Dimension(100, 50));
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        getContentPane().add(returnButton, gridBagConstraints);

        saveDataButton.setText("Save Data");
        saveDataButton.setMaximumSize(new java.awt.Dimension(100, 50));
        saveDataButton.setPreferredSize(new java.awt.Dimension(100, 50));
        saveDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveDataButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        getContentPane().add(saveDataButton, gridBagConstraints);

        currentPositionLabel.setText("Current Position");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        getContentPane().add(currentPositionLabel, gridBagConstraints);
        currentPositionLabel.getAccessibleContext().setAccessibleName("CurrentPosition");

        currentPositionTextArea.setEditable(false);
        currentPositionTextArea.setColumns(20);
        currentPositionTextArea.setRows(5);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        getContentPane().add(currentPositionTextArea, gridBagConstraints);

        targetPositionLabel.setText("Target Position");
        targetPositionLabel.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        getContentPane().add(targetPositionLabel, gridBagConstraints);

        targetPositionTextField.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        getContentPane().add(targetPositionTextField, gridBagConstraints);

        positionLabel.setText("Position");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        getContentPane().add(positionLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        getContentPane().add(positionTextField, gridBagConstraints);

        motorsEnableButton.setLabel("Motors Disabled");
        motorsEnableButton.setMaximumSize(new java.awt.Dimension(100, 50));
        motorsEnableButton.setPreferredSize(new java.awt.Dimension(100, 50));
        motorsEnableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                motorsEnableButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        getContentPane().add(motorsEnableButton, gridBagConstraints);

        moveModeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        moveModeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveModeComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        getContentPane().add(moveModeComboBox, gridBagConstraints);

        activeMotorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        activeMotorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activeMotorComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        getContentPane().add(activeMotorComboBox, gridBagConstraints);

        jogPanel.setLayout(new java.awt.GridBagLayout());

        jogYPosButton.setText("^");
        jogYPosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jogYPosButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jogPanel.add(jogYPosButton, gridBagConstraints);

        jogXNegButton.setText("<");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jogPanel.add(jogXNegButton, gridBagConstraints);

        jogXPosButton.setText(">");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jogPanel.add(jogXPosButton, gridBagConstraints);

        jogYNegButton.setText("v");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        jogPanel.add(jogYNegButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        getContentPane().add(jogPanel, gridBagConstraints);

        moveModeLabel.setText("Movement Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        getContentPane().add(moveModeLabel, gridBagConstraints);

        activeMotorLabel.setText("Active Motor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        getContentPane().add(activeMotorLabel, gridBagConstraints);

        roiButton.setText("Set ROI");
        roiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roiButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        getContentPane().add(roiButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 10, 10);
        getContentPane().add(roiTypeComboBox, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void customInitComponents()
    {
        this.moveModeComboBox.removeAllItems();
        this.moveModeComboBox.addItem("Relative");
        this.moveModeComboBox.addItem("Absolute");
        
        this.activeMotorComboBox.removeAllItems();
        this.activeMotorComboBox.addItem("National Aperture");
        this.activeMotorComboBox.addItem("Piezo");
        this.activeMotorComboBox.addItem("Newport XY");
    }
    
    private void startCameraButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startCameraButtonActionPerformed
        System.out.println("Hello");
    }//GEN-LAST:event_startCameraButtonActionPerformed

    private void captureImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_captureImageButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_captureImageButtonActionPerformed

    private void captureVideoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_captureVideoButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_captureVideoButtonActionPerformed

    private void positionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_positionButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_positionButtonActionPerformed

    private void probeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_probeButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_probeButtonActionPerformed

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_returnButtonActionPerformed

    private void saveDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveDataButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveDataButtonActionPerformed

    private void motorsEnableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_motorsEnableButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_motorsEnableButtonActionPerformed

    private void moveModeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveModeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_moveModeComboBoxActionPerformed

    private void activeMotorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activeMotorComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_activeMotorComboBoxActionPerformed

    private void jogYPosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jogYPosButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jogYPosButtonActionPerformed

    private void roiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roiButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roiButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUIJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUIJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUIJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUIJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainUIJFrame().setVisible(true);
            }
        });
    }
    
    public JButton getStartCameraButton() {
        return this.startCameraButton;
    }

    public JLabel getCameraLabel() {
        
        return this.cameraLabel;
    }
    
    public JButton getCaptureImageButton(){
        return this.captureImageButton;
    }
    
    public JButton getCaptureVideoButton() {
        return this.captureVideoButton;
    }
    
    public JButton getPositionButton() {
        return this.positionButton;
    }
    
    public JTextArea getCurrentPositionTextArea() {
        return this.currentPositionTextArea;
    }
    
    public JButton getProbeButton() {
        return this.probeButton;
    }
    
    public JButton getReturnButton() {
        return this.returnButton;
    }
    
    public JButton getSaveDataButton() {
        return this.saveDataButton;
    }
    
    public JTextField getTargetPositionTextField() {
        return this.targetPositionTextField;
    }
    
    public JTextField getPositionTextField() {
        return this.positionTextField;
    }
    
    public JButton getMotorsEnableButton() {
        return this.motorsEnableButton;
    }
    
    public JComboBox getMoveModeComboBox() {
        return this.moveModeComboBox;
    }
    
    public JComboBox getActiveMotorComboBox() {
        return this.activeMotorComboBox;
    }
    
    public JButton getJogXNegButton() {
        return this.jogXNegButton;
    }
    
    public JButton getJogXPosButton() {
        return this.jogXPosButton;
    }
    
    public JButton getJogYNegButton() {
        return this.jogYNegButton;
    }
    
    public JButton getJogYPosButton() {
        return this.jogYPosButton;
    }
    
    public void setVideoImage(java.awt.Image im){
        //Image scaledImage = im.getScaledInstance(cameraLabel.getWidth(), cameraLabel.getHeight(), Image.SCALE_SMOOTH);
        cameraLabel.setIcon(new ImageIcon(im));
    }
    
    public javax.swing.JButton getROIButton(){
        return this.roiButton;
    }
    
    public javax.swing.JComboBox<String> getROITypeComboBox()
    {
        return this.roiTypeComboBox;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> activeMotorComboBox;
    private javax.swing.JLabel activeMotorLabel;
    private javax.swing.JLabel cameraLabel;
    private javax.swing.JButton captureImageButton;
    private javax.swing.JButton captureVideoButton;
    private javax.swing.JLabel currentPositionLabel;
    private javax.swing.JTextArea currentPositionTextArea;
    private javax.swing.JScrollPane imageScrollPane;
    private javax.swing.JPanel jogPanel;
    private javax.swing.JButton jogXNegButton;
    private javax.swing.JButton jogXPosButton;
    private javax.swing.JButton jogYNegButton;
    private javax.swing.JButton jogYPosButton;
    private javax.swing.JButton motorsEnableButton;
    private javax.swing.JComboBox<String> moveModeComboBox;
    private javax.swing.JLabel moveModeLabel;
    private javax.swing.JButton positionButton;
    private javax.swing.JLabel positionLabel;
    private javax.swing.JTextField positionTextField;
    private javax.swing.JButton probeButton;
    private javax.swing.JButton returnButton;
    private javax.swing.JButton roiButton;
    private javax.swing.JComboBox<String> roiTypeComboBox;
    private javax.swing.JButton saveDataButton;
    private javax.swing.JButton startCameraButton;
    private javax.swing.JLabel targetPositionLabel;
    private javax.swing.JTextField targetPositionTextField;
    // End of variables declaration//GEN-END:variables
}
